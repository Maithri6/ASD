{"ast":null,"code":"var _jsxFileName = \"/Users/maithri/Desktop/gsc/src/components/Auth.js\",\n  _s = $RefreshSig$();\nimport { auth, googleProvider } from \"../config/firebase\";\nimport { createUserWithEmailAndPassword, signInWithPopup, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addUserDataToFirestore, fetchPersonData } from \"../config/services\"; // Import the services\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Auth = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null); // Track the authenticated user\n  const navigate = useNavigate();\n\n  // Check if the user is authenticated and update the user state\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setUser(user); // Update user state\n    });\n    return unsubscribe; // Cleanup on component unmount\n  }, []);\n\n  // Redirect to the appropriate page based on email (existing or new user)\n  useEffect(() => {\n    if (user !== null) {\n      const checkIfUserExists = async () => {\n        const userEmail = user.email;\n        console.log(\"Authenticated user email:\", userEmail); // Debugging line\n\n        // Fetch user data from Firestore\n        const personData = await fetchPersonData(); // Check if the user data exists in Firestore\n        if (personData) {\n          console.log(\"User exists in database, navigating to dashboard.\");\n          navigate(\"/Dashboard\"); // Correct routing to dashboard\n        } else {\n          console.log(\"New user, navigating to AddPerson.\");\n          navigate(\"/AddPerson\"); // Correct routing to AddPerson\n        }\n      };\n      checkIfUserExists(); // Execute the check\n    }\n  }, [user, navigate]); // Ensure this effect runs when 'user' state changes\n\n  const signIn = async () => {\n    try {\n      // Check if user already exists\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Add user data to Firestore if it's a new user\n      await addUserDataToFirestore(user);\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during sign-in:\", err.message);\n    }\n  };\n  const signInWithGoogle = async () => {\n    try {\n      const userCredential = await signInWithPopup(auth, googleProvider);\n      const user = userCredential.user;\n\n      // Add user data to Firestore if it's a new user\n      await addUserDataToFirestore(user);\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during Google sign-in:\", err.message);\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/auth\"); // Redirect to the Auth page after logout\n    } catch (err) {\n      console.error(\"Error during logout:\", err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email...\",\n      onChange: e => setEmail(e.target.value),\n      value: email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password...\",\n      type: \"password\",\n      onChange: e => setPassword(e.target.value),\n      value: password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signIn,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithGoogle,\n      children: \"Sign In with Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"PVZvp4X1pwqNvgWOkzewLiBC+uY=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["auth","googleProvider","createUserWithEmailAndPassword","signInWithPopup","signOut","onAuthStateChanged","useState","useEffect","useNavigate","addUserDataToFirestore","fetchPersonData","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","password","setPassword","user","setUser","navigate","unsubscribe","checkIfUserExists","userEmail","console","log","personData","signIn","userCredential","err","error","message","signInWithGoogle","logout","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","e","target","value","type","onClick","_c","$RefreshReg$"],"sources":["/Users/maithri/Desktop/gsc/src/components/Auth.js"],"sourcesContent":["import { auth, googleProvider } from \"../config/firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithPopup,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addUserDataToFirestore, fetchPersonData } from \"../config/services\"; // Import the services\n\nexport const Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null); // Track the authenticated user\n  const navigate = useNavigate();\n\n  // Check if the user is authenticated and update the user state\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setUser(user);  // Update user state\n    });\n    return unsubscribe; // Cleanup on component unmount\n  }, []);\n\n  // Redirect to the appropriate page based on email (existing or new user)\n  useEffect(() => {\n    if (user !== null) {\n      const checkIfUserExists = async () => {\n        const userEmail = user.email;\n        console.log(\"Authenticated user email:\", userEmail);  // Debugging line\n\n        // Fetch user data from Firestore\n        const personData = await fetchPersonData(); // Check if the user data exists in Firestore\n        if (personData) {\n          console.log(\"User exists in database, navigating to dashboard.\");\n          navigate(\"/Dashboard\"); // Correct routing to dashboard\n        } else {\n          console.log(\"New user, navigating to AddPerson.\");\n          navigate(\"/AddPerson\"); // Correct routing to AddPerson\n        }\n      };\n\n      checkIfUserExists();  // Execute the check\n    }\n  }, [user, navigate]); // Ensure this effect runs when 'user' state changes\n\n  const signIn = async () => {\n    try {\n      // Check if user already exists\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Add user data to Firestore if it's a new user\n      await addUserDataToFirestore(user);\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during sign-in:\", err.message);\n    }\n  };\n\n  const signInWithGoogle = async () => {\n    try {\n      const userCredential = await signInWithPopup(auth, googleProvider);\n      const user = userCredential.user;\n\n      // Add user data to Firestore if it's a new user\n      await addUserDataToFirestore(user);\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during Google sign-in:\", err.message);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/auth\"); // Redirect to the Auth page after logout\n    } catch (err) {\n      console.error(\"Error during logout:\", err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Authentication</h2>\n      <input\n        placeholder=\"Email...\"\n        onChange={(e) => setEmail(e.target.value)}\n        value={email}\n      />\n      <input\n        placeholder=\"Password...\"\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n        value={password}\n      />\n      <button onClick={signIn}>Sign In</button>\n      <button onClick={signInWithGoogle}>Sign In with Google</button>\n      <button onClick={logout}>Logout</button>\n    </div>\n  );\n};\n\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}