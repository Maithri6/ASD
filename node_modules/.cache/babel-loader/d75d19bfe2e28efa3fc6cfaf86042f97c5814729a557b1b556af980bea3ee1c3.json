{"ast":null,"code":"var _jsxFileName = \"/Users/maithri/Desktop/gsc/src/components/Auth.js\",\n  _s = $RefreshSig$();\nimport { auth, googleProvider } from \"../config/firebase\";\nimport { createUserWithEmailAndPassword, signInWithPopup, signOut, signInWithEmailAndPassword, onAuthStateChanged } from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addUserDataToFirestore, fetchPersonData } from \"../config/services\"; // Import the services\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Auth = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null); // Track the authenticated user\n  const [isSignUp, setIsSignUp] = useState(false); // To toggle between SignUp and SignIn\n  const navigate = useNavigate();\n\n  // Check if the user is authenticated and update the user state\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setUser(user); // Update user state\n    });\n    return unsubscribe; // Cleanup on component unmount\n  }, []);\n\n  // Redirect to the appropriate page based on email (existing or new user)\n  useEffect(() => {\n    if (user !== null) {\n      const checkIfUserExists = async () => {\n        const personData = await fetchPersonData(); // Check if the user data exists in Firestore\n        if (personData) {\n          console.log(\"User exists in database, navigating to dashboard.\");\n          navigate(\"/Dashboard\"); // Correct routing to dashboard\n        } else {\n          console.log(\"New user, navigating to AddPerson.\");\n          navigate(\"/AddPerson\"); // Correct routing to AddPerson\n        }\n      };\n      checkIfUserExists(); // Execute the check\n    }\n  }, [user, navigate]); // Ensure this effect runs when 'user' state changes\n\n  const signUp = async () => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Add user data to Firestore if it's a new user\n      await addUserDataToFirestore(user);\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during sign-up:\", err.message);\n    }\n  };\n  const signIn = async () => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Check if user data exists in Firestore\n      const personData = await fetchPersonData();\n      if (!personData) {\n        // If no user data exists, add the user data to Firestore\n        await addUserDataToFirestore(user);\n      }\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during sign-in:\", err.message);\n    }\n  };\n  const signInWithGoogle = async () => {\n    try {\n      const userCredential = await signInWithPopup(auth, googleProvider);\n      const user = userCredential.user;\n\n      // Check if user data exists in Firestore\n      const personData = await fetchPersonData();\n      if (!personData) {\n        // If no user data exists, add the user data to Firestore\n        await addUserDataToFirestore(user);\n      }\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during Google sign-in:\", err.message);\n    }\n  };\n  const signUpWithGoogle = async () => {\n    try {\n      const userCredential = await signInWithPopup(auth, googleProvider);\n      const user = userCredential.user;\n\n      // Add user data to Firestore if it's a new user\n      await addUserDataToFirestore(user);\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during Google sign-up:\", err.message);\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/auth\"); // Redirect to the Auth page after logout\n    } catch (err) {\n      console.error(\"Error during logout:\", err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Authentication\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsSignUp(true),\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setIsSignUp(false),\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), isSignUp ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email...\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password...\",\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signUp,\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signUpWithGoogle,\n        children: \"Sign Up with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Email...\",\n        onChange: e => setEmail(e.target.value),\n        value: email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Password...\",\n        type: \"password\",\n        onChange: e => setPassword(e.target.value),\n        value: password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signIn,\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signInWithGoogle,\n        children: \"Sign In with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), user && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 16\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"Pafv4T1KCnOqCK8FOOt2jMTFIi4=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["auth","googleProvider","createUserWithEmailAndPassword","signInWithPopup","signOut","signInWithEmailAndPassword","onAuthStateChanged","useState","useEffect","useNavigate","addUserDataToFirestore","fetchPersonData","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","password","setPassword","user","setUser","isSignUp","setIsSignUp","navigate","unsubscribe","checkIfUserExists","personData","console","log","signUp","userCredential","err","error","message","signIn","signInWithGoogle","signUpWithGoogle","logout","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","placeholder","onChange","e","target","value","type","_c","$RefreshReg$"],"sources":["/Users/maithri/Desktop/gsc/src/components/Auth.js"],"sourcesContent":["import { auth, googleProvider } from \"../config/firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithPopup,\n  signOut,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addUserDataToFirestore, fetchPersonData } from \"../config/services\"; // Import the services\n\nexport const Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null); // Track the authenticated user\n  const [isSignUp, setIsSignUp] = useState(false); // To toggle between SignUp and SignIn\n  const navigate = useNavigate();\n\n  // Check if the user is authenticated and update the user state\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setUser(user);  // Update user state\n    });\n    return unsubscribe; // Cleanup on component unmount\n  }, []);\n\n  // Redirect to the appropriate page based on email (existing or new user)\n  useEffect(() => {\n    if (user !== null) {\n      const checkIfUserExists = async () => {\n        const personData = await fetchPersonData(); // Check if the user data exists in Firestore\n        if (personData) {\n          console.log(\"User exists in database, navigating to dashboard.\");\n          navigate(\"/Dashboard\"); // Correct routing to dashboard\n        } else {\n          console.log(\"New user, navigating to AddPerson.\");\n          navigate(\"/AddPerson\"); // Correct routing to AddPerson\n        }\n      };\n\n      checkIfUserExists();  // Execute the check\n    }\n  }, [user, navigate]); // Ensure this effect runs when 'user' state changes\n\n  const signUp = async () => {\n    try {\n      const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Add user data to Firestore if it's a new user\n      await addUserDataToFirestore(user);\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during sign-up:\", err.message);\n    }\n  };\n\n  const signIn = async () => {\n    try {\n      const userCredential = await signInWithEmailAndPassword(auth, email, password);\n      const user = userCredential.user;\n\n      // Check if user data exists in Firestore\n      const personData = await fetchPersonData();\n      if (!personData) {\n        // If no user data exists, add the user data to Firestore\n        await addUserDataToFirestore(user);\n      }\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during sign-in:\", err.message);\n    }\n  };\n\n  const signInWithGoogle = async () => {\n    try {\n      const userCredential = await signInWithPopup(auth, googleProvider);\n      const user = userCredential.user;\n\n      // Check if user data exists in Firestore\n      const personData = await fetchPersonData();\n      if (!personData) {\n        // If no user data exists, add the user data to Firestore\n        await addUserDataToFirestore(user);\n      }\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during Google sign-in:\", err.message);\n    }\n  };\n\n  const signUpWithGoogle = async () => {\n    try {\n      const userCredential = await signInWithPopup(auth, googleProvider);\n      const user = userCredential.user;\n\n      // Add user data to Firestore if it's a new user\n      await addUserDataToFirestore(user);\n\n      // Redirection is handled in useEffect after authentication\n    } catch (err) {\n      console.error(\"Error during Google sign-up:\", err.message);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/auth\"); // Redirect to the Auth page after logout\n    } catch (err) {\n      console.error(\"Error during logout:\", err.message);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Authentication</h2>\n\n      {/* Toggle between SignUp and SignIn */}\n      <button onClick={() => setIsSignUp(true)}>Sign Up</button>\n      <button onClick={() => setIsSignUp(false)}>Sign In</button>\n\n      {/* Render SignUp or SignIn forms based on the state */}\n      {isSignUp ? (\n        <div>\n          <h3>Sign Up</h3>\n          <input\n            placeholder=\"Email...\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n          />\n          <input\n            placeholder=\"Password...\"\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n          <button onClick={signUp}>Sign Up</button>\n          <button onClick={signUpWithGoogle}>Sign Up with Google</button>\n        </div>\n      ) : (\n        <div>\n          <h3>Sign In</h3>\n          <input\n            placeholder=\"Email...\"\n            onChange={(e) => setEmail(e.target.value)}\n            value={email}\n          />\n          <input\n            placeholder=\"Password...\"\n            type=\"password\"\n            onChange={(e) => setPassword(e.target.value)}\n            value={password}\n          />\n          <button onClick={signIn}>Sign In</button>\n          <button onClick={signInWithGoogle}>Sign In with Google</button>\n        </div>\n      )}\n\n      {/* Log out button */}\n      {user && <button onClick={logout}>Log Out</button>}\n    </div>\n  );\n};\n\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}