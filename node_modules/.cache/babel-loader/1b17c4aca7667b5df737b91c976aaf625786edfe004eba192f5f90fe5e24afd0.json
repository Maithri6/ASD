{"ast":null,"code":"import { getFirestore, doc, setDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { auth } from \"./firebase\";\n\n// Add user data to Firestore\nexport const addUserDataToFirestore = async user => {\n  const db = getFirestore();\n  const userDocRef = doc(db, \"Person\", user.email);\n  const userData = {\n    name: user.displayName || \"Anonymous\",\n    age: 0,\n    level_on_the_spectrum: \"Not Specified\"\n  };\n  try {\n    await setDoc(userDocRef, userData);\n    console.log(\"User data added to Firestore\");\n  } catch (error) {\n    console.error(\"Error adding user data:\", error);\n  }\n};\n\n// Fetch user data from Firestore\nexport const fetchPersonData = async () => {\n  const user = auth.currentUser;\n  if (!user) return null;\n  const db = getFirestore();\n  const userDocRef = doc(db, \"Person\", user.email);\n  try {\n    const docSnap = await getDoc(userDocRef);\n    if (docSnap.exists()) {\n      return docSnap.data();\n    } else {\n      console.log(\"No such document!\");\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error fetching document:\", error);\n    return null;\n  }\n};\n\n// Update user data in Firestore\nexport const updatePersonData = async updatedData => {\n  const user = auth.currentUser;\n  if (!user) return;\n  const db = getFirestore();\n  const userDocRef = doc(db, \"Person\", user.email);\n  try {\n    await updateDoc(userDocRef, updatedData);\n    console.log(\"User data updated successfully\");\n  } catch (error) {\n    console.error(\"Error updating user data:\", error);\n  }\n};","map":{"version":3,"names":["getFirestore","doc","setDoc","getDoc","updateDoc","auth","addUserDataToFirestore","user","db","userDocRef","email","userData","name","displayName","age","level_on_the_spectrum","console","log","error","fetchPersonData","currentUser","docSnap","exists","data","updatePersonData","updatedData"],"sources":["/Users/maithri/Desktop/gsc/src/config/services.js"],"sourcesContent":["import { getFirestore, doc, setDoc, getDoc, updateDoc } from \"firebase/firestore\";\nimport { auth } from \"./firebase\";\n\n// Add user data to Firestore\nexport const addUserDataToFirestore = async (user) => {\n  const db = getFirestore();\n  const userDocRef = doc(db, \"Person\", user.email);\n\n  const userData = {\n    name: user.displayName || \"Anonymous\",\n    age: 0,\n    level_on_the_spectrum: \"Not Specified\",\n  };\n\n  try {\n    await setDoc(userDocRef, userData);\n    console.log(\"User data added to Firestore\");\n  } catch (error) {\n    console.error(\"Error adding user data:\", error);\n  }\n};\n\n// Fetch user data from Firestore\nexport const fetchPersonData = async () => {\n  const user = auth.currentUser;\n  if (!user) return null;\n\n  const db = getFirestore();\n  const userDocRef = doc(db, \"Person\", user.email);\n\n  try {\n    const docSnap = await getDoc(userDocRef);\n    if (docSnap.exists()) {\n      return docSnap.data();\n    } else {\n      console.log(\"No such document!\");\n      return null;\n    }\n  } catch (error) {\n    console.error(\"Error fetching document:\", error);\n    return null;\n  }\n};\n\n// Update user data in Firestore\nexport const updatePersonData = async (updatedData) => {\n  const user = auth.currentUser;\n  if (!user) return;\n\n  const db = getFirestore();\n  const userDocRef = doc(db, \"Person\", user.email);\n\n  try {\n    await updateDoc(userDocRef, updatedData);\n    console.log(\"User data updated successfully\");\n  } catch (error) {\n    console.error(\"Error updating user data:\", error);\n  }\n};\n\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,GAAG,EAAEC,MAAM,EAAEC,MAAM,EAAEC,SAAS,QAAQ,oBAAoB;AACjF,SAASC,IAAI,QAAQ,YAAY;;AAEjC;AACA,OAAO,MAAMC,sBAAsB,GAAG,MAAOC,IAAI,IAAK;EACpD,MAAMC,EAAE,GAAGR,YAAY,CAAC,CAAC;EACzB,MAAMS,UAAU,GAAGR,GAAG,CAACO,EAAE,EAAE,QAAQ,EAAED,IAAI,CAACG,KAAK,CAAC;EAEhD,MAAMC,QAAQ,GAAG;IACfC,IAAI,EAAEL,IAAI,CAACM,WAAW,IAAI,WAAW;IACrCC,GAAG,EAAE,CAAC;IACNC,qBAAqB,EAAE;EACzB,CAAC;EAED,IAAI;IACF,MAAMb,MAAM,CAACO,UAAU,EAAEE,QAAQ,CAAC;IAClCK,OAAO,CAACC,GAAG,CAAC,8BAA8B,CAAC;EAC7C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;EACjD;AACF,CAAC;;AAED;AACA,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAA,KAAY;EACzC,MAAMZ,IAAI,GAAGF,IAAI,CAACe,WAAW;EAC7B,IAAI,CAACb,IAAI,EAAE,OAAO,IAAI;EAEtB,MAAMC,EAAE,GAAGR,YAAY,CAAC,CAAC;EACzB,MAAMS,UAAU,GAAGR,GAAG,CAACO,EAAE,EAAE,QAAQ,EAAED,IAAI,CAACG,KAAK,CAAC;EAEhD,IAAI;IACF,MAAMW,OAAO,GAAG,MAAMlB,MAAM,CAACM,UAAU,CAAC;IACxC,IAAIY,OAAO,CAACC,MAAM,CAAC,CAAC,EAAE;MACpB,OAAOD,OAAO,CAACE,IAAI,CAAC,CAAC;IACvB,CAAC,MAAM;MACLP,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;MAChC,OAAO,IAAI;IACb;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,OAAO,IAAI;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAMM,gBAAgB,GAAG,MAAOC,WAAW,IAAK;EACrD,MAAMlB,IAAI,GAAGF,IAAI,CAACe,WAAW;EAC7B,IAAI,CAACb,IAAI,EAAE;EAEX,MAAMC,EAAE,GAAGR,YAAY,CAAC,CAAC;EACzB,MAAMS,UAAU,GAAGR,GAAG,CAACO,EAAE,EAAE,QAAQ,EAAED,IAAI,CAACG,KAAK,CAAC;EAEhD,IAAI;IACF,MAAMN,SAAS,CAACK,UAAU,EAAEgB,WAAW,CAAC;IACxCT,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAC/C,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;EACnD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}