{"ast":null,"code":"var _jsxFileName = \"/Users/maithri/Desktop/gsc/src/components/Auth.js\",\n  _s = $RefreshSig$();\nimport { auth, googleProvider } from \"../config/firebase\";\nimport { createUserWithEmailAndPassword, signInWithPopup, signOut, onAuthStateChanged } from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Auth = () => {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null); // Track the authenticated user\n  const navigate = useNavigate();\n\n  // Check if user is authenticated and update user state\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setUser(user);\n    });\n    return unsubscribe; // Cleanup on component unmount\n  }, []);\n\n  // Redirect to the appropriate page based on email (existing or new user)\n  useEffect(() => {\n    if (user !== null) {\n      const checkIfUserExists = async () => {\n        const docRef = doc(db, \"Person\", user.email);\n        const docSnap = await getDoc(docRef);\n\n        // Check if user document exists\n        if (docSnap.exists()) {\n          navigate(\"/Dashboard\"); // Redirect to the dashboard for existing user\n        } else {\n          navigate(\"/AddPerson\"); // Redirect to the AddPerson page for new user\n        }\n      };\n      checkIfUserExists();\n    }\n  }, [user, navigate]);\n  const signIn = async () => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      // Redirection is handled in useEffect\n    } catch (err) {\n      console.error(\"Error during sign-in:\", err.message);\n    }\n  };\n  const signInWithGoogle = async () => {\n    try {\n      await signInWithPopup(auth, googleProvider);\n      // Redirection is handled in useEffect\n    } catch (err) {\n      console.error(\"Error during Google sign-in:\", err.message);\n    }\n  };\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/auth\"); // Redirect to the Auth page after logout\n    } catch (err) {\n      console.error(\"Error during logout:\", err.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Email...\",\n      onChange: e => setEmail(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Password...\",\n      type: \"password\",\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signIn,\n      children: \"Sign In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: signInWithGoogle,\n      children: \"Sign In With Google\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: logout,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(Auth, \"PVZvp4X1pwqNvgWOkzewLiBC+uY=\", false, function () {\n  return [useNavigate];\n});\n_c = Auth;\nvar _c;\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["auth","googleProvider","createUserWithEmailAndPassword","signInWithPopup","signOut","onAuthStateChanged","useState","useEffect","useNavigate","doc","getDoc","db","jsxDEV","_jsxDEV","Auth","_s","email","setEmail","password","setPassword","user","setUser","navigate","unsubscribe","checkIfUserExists","docRef","docSnap","exists","signIn","err","console","error","message","signInWithGoogle","logout","children","placeholder","onChange","e","target","value","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["/Users/maithri/Desktop/gsc/src/components/Auth.js"],"sourcesContent":["import { auth, googleProvider } from \"../config/firebase\";\nimport {\n  createUserWithEmailAndPassword,\n  signInWithPopup,\n  signOut,\n  onAuthStateChanged,\n} from \"firebase/auth\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from \"../config/firebase\";\n\nexport const Auth = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [user, setUser] = useState(null); // Track the authenticated user\n  const navigate = useNavigate();\n\n  // Check if user is authenticated and update user state\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      setUser(user);\n    });\n    return unsubscribe; // Cleanup on component unmount\n  }, []);\n\n  // Redirect to the appropriate page based on email (existing or new user)\n  useEffect(() => {\n    if (user !== null) {\n      const checkIfUserExists = async () => {\n        const docRef = doc(db, \"Person\", user.email);\n        const docSnap = await getDoc(docRef);\n\n        // Check if user document exists\n        if (docSnap.exists()) {\n          navigate(\"/Dashboard\"); // Redirect to the dashboard for existing user\n        } else {\n          navigate(\"/AddPerson\"); // Redirect to the AddPerson page for new user\n        }\n      };\n\n      checkIfUserExists();\n    }\n  }, [user, navigate]);\n\n  const signIn = async () => {\n    try {\n      await createUserWithEmailAndPassword(auth, email, password);\n      // Redirection is handled in useEffect\n    } catch (err) {\n      console.error(\"Error during sign-in:\", err.message);\n    }\n  };\n\n  const signInWithGoogle = async () => {\n    try {\n      await signInWithPopup(auth, googleProvider);\n      // Redirection is handled in useEffect\n    } catch (err) {\n      console.error(\"Error during Google sign-in:\", err.message);\n    }\n  };\n\n  const logout = async () => {\n    try {\n      await signOut(auth);\n      navigate(\"/auth\"); // Redirect to the Auth page after logout\n    } catch (err) {\n      console.error(\"Error during logout:\", err.message);\n    }\n  };\n\n  return (\n    <div>\n      <input\n        placeholder=\"Email...\"\n        onChange={(e) => setEmail(e.target.value)}\n      />\n      <input\n        placeholder=\"Password...\"\n        type=\"password\"\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button onClick={signIn}>Sign In</button>\n      <button onClick={signInWithGoogle}>Sign In With Google</button>\n      <button onClick={logout}>Logout</button>\n    </div>\n  );\n};\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}